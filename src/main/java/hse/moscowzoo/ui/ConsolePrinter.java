package hse.moscowzoo.ui;

import hse.moscowzoo.domain.entities.alive.Animal;
import hse.moscowzoo.domain.interfaces.IInventory;
import hse.moscowzoo.utils.MessageFormatter;

import java.util.List;

public class ConsolePrinter {
    private final MessageFormatter formatter;

    public ConsolePrinter(MessageFormatter formatter) {
        this.formatter = formatter;
    }

    public void printMainMenu() {
        System.out.println("\n" + "=".repeat(50));
        System.out.println("üè†           –ú–û–°–ö–û–í–°–ö–ò–ô –ó–û–û–ü–ê–†–ö");
        System.out.println("=".repeat(50));
        System.out.println("1. üêæ –î–æ–±–∞–≤–∏—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–µ");
        System.out.println("2. üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö");
        System.out.println("3. ü•ï –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫–æ—Ä–º–∞");
        System.out.println("4. üè† –ñ–∏–≤–æ—Ç–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞");
        System.out.println("5. üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è");
        System.out.println("0. üö™ –í—ã—Ö–æ–¥");
        System.out.println("-".repeat(50));
    }

    public void printAnimalTypesMenu() {
        System.out.println("\n--- –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ ---");
        System.out.println("1. üêá –ö—Ä–æ–ª–∏–∫");
        System.out.println("2. üêµ –û–±–µ–∑—å—è–Ω–∞");
        System.out.println("3. üêØ –¢–∏–≥—Ä");
        System.out.println("4. üê∫ –í–æ–ª–∫");
    }

    public void printAnimalAdded(Animal animal, boolean accepted) {
        System.out.println("\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ---");
        System.out.println(formatter.formatAnimalInfo(animal));
        if (accepted) {
            printSuccess("–ñ–∏–≤–æ—Ç–Ω–æ–µ –ø—Ä–∏–Ω—è—Ç–æ –≤ –∑–æ–æ–ø–∞—Ä–∫! üéâ");
        } else {
            printError("–ñ–∏–≤–æ—Ç–Ω–æ–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ –≤ –∑–æ–æ–ø–∞—Ä–∫ ‚ùå");
        }
    }

    public void printAnimals(List<Animal> animals) {
        System.out.println("\n--- –í—Å–µ –∂–∏–≤–æ—Ç–Ω—ã–µ ---");
        if (animals.isEmpty()) {
            printInfo("–ù–µ—Ç –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∑–æ–æ–ø–∞—Ä–∫–µ");
        } else {
            animals.forEach(animal ->
                    System.out.println(formatter.formatAnimalInfo(animal))
            );
        }
    }

    public void printContactZooAnimals(List<Animal> animals) {
        System.out.println("\n--- –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –∑–æ–æ–ø–∞—Ä–∫ ---");
        if (animals.isEmpty()) {
            printInfo("–ù–µ—Ç –∂–∏–≤–æ—Ç–Ω—ã—Ö –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞");
        } else {
            animals.forEach(animal ->
                    System.out.println(formatter.formatAnimalInfo(animal))
            );
        }
    }

    public void printFoodReport(int animalCount, int totalFood) {
        System.out.println(formatter.formatFoodReport(animalCount, totalFood));
    }

    public void printInventory(List<IInventory> inventory) {
        System.out.println("\n--- –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è ---");
        if (inventory.isEmpty()) {
            printInfo("–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ");
        } else {
            inventory.forEach(item ->
                    System.out.println("‚Ä¢ " + formatter.formatInventoryItem(item))
            );
        }
    }

    public void printSuccess(String message) {
        System.out.println(formatter.formatSuccess(message));
    }

    public void printError(String message) {
        System.out.println(formatter.formatError(message));
    }

    public void printInfo(String message) {
        System.out.println(formatter.formatInfo(message));
    }

    public void printWarning(String message) {
        System.out.println(formatter.formatWarning(message));
    }
}
